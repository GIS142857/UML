<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36" version="26.1.0">
  <diagram name="Page-1" id="f09UW0xhOilFpxU1UN8Q">
    <mxGraphModel dx="2501" dy="3123" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="bZFTZhcOLTCebWkoZDsH-1" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;main&lt;/span&gt;() {&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#75715e;font-family:&#39;Menlo-Regular&#39;,monospace;&quot;&gt;设置日志和中间件等&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;font-family:&#39;Menlo-Regular&#39;,monospace;&quot;&gt;    &lt;/span&gt;logger.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Init&lt;/span&gt;()&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#75715e;font-family:&#39;Menlo-Regular&#39;,monospace;&quot;&gt;创建服务实例&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;font-family:&#39;Menlo-Regular&#39;,monospace;&quot;&gt;    &lt;/span&gt;h &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;server.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Default&lt;/span&gt;(server.&lt;span style=&quot;color:#66d9ef;&quot;&gt;WithHostPorts&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;:9999&quot;&lt;/span&gt;))&lt;br&gt;    h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Use&lt;/span&gt;()&lt;br&gt;    user &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Group&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;/user&quot;&lt;/span&gt;)&lt;br&gt;    {&lt;br&gt;       user.&lt;span style=&quot;color:#66d9ef;&quot;&gt;GET&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;/say&quot;&lt;/span&gt;, handler.&lt;span style=&quot;color:#a6e22e;&quot;&gt;Hello&lt;/span&gt;)&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#75715e;font-family:&#39;Menlo-Regular&#39;,monospace;&quot;&gt;路由处理&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;font-family:&#39;Menlo-Regular&#39;,monospace;&quot;&gt;    &lt;/span&gt;h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;GET&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;/&quot;&lt;/span&gt;, handler.&lt;span style=&quot;color:#a6e22e;&quot;&gt;Hello&lt;/span&gt;)&lt;br&gt;    h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;GET&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;/user&quot;&lt;/span&gt;, handler.&lt;span style=&quot;color:#a6e22e;&quot;&gt;GetUser&lt;/span&gt;)&lt;br&gt;    fmt.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Println&lt;/span&gt;(runtime.&lt;span style=&quot;color:#66d9ef;&quot;&gt;NumGoroutine&lt;/span&gt;())&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#75715e;font-family:&#39;Menlo-Regular&#39;,monospace;&quot;&gt;启动服务&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;font-family:&#39;Menlo-Regular&#39;,monospace;&quot;&gt;    &lt;/span&gt;h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Spin&lt;/span&gt;()&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-420" y="180" width="620" height="450" as="geometry" />
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color: rgb(39, 40, 34); color: rgb(248, 248, 242);&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color: rgb(117, 113, 94);&quot;&gt;&lt;div style=&quot;color: rgb(248, 248, 242);&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;Hertz &lt;span style=&quot;color:#f92672;&quot;&gt;struct &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;route.&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;signalWaiter &lt;span style=&quot;color:#f92672;&quot;&gt;func&lt;/span&gt;(err &lt;span style=&quot;color:#f92672;&quot;&gt;chan &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;error&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;error&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color: rgb(117, 113, 94);&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161, 161, 161);&quot;&gt;New&lt;/span&gt;&lt;span style=&quot;color: rgb(117, 113, 94);&quot;&gt; creates a hertz instance without any default config.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46);&quot;&gt;New&lt;/span&gt;(opts ...config.&lt;span style=&quot;color: rgb(118, 154, 165);&quot;&gt;Option&lt;/span&gt;) &lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color: rgb(118, 154, 165);&quot;&gt;Hertz &lt;/span&gt;{&lt;br&gt;    options &lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;:= &lt;/span&gt;config.&lt;span style=&quot;color: rgb(102, 217, 239);&quot;&gt;NewOptions&lt;/span&gt;(opts)&lt;br&gt;    h &lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;:= &amp;amp;&lt;/span&gt;&lt;span style=&quot;color: rgb(118, 154, 165);&quot;&gt;Hertz&lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;font-style:italic;&quot;&gt;Engine&lt;/span&gt;: route.&lt;span style=&quot;color: rgb(102, 217, 239);&quot;&gt;NewEngine&lt;/span&gt;(options),&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;return &lt;/span&gt;h&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color: rgb(117, 113, 94);&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: rgb(161, 161, 161);&quot;&gt;Default&lt;/span&gt;&lt;span style=&quot;color: rgb(117, 113, 94);&quot;&gt; creates a hertz instance with default middlewares.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46);&quot;&gt;Default&lt;/span&gt;(opts ...config.&lt;span style=&quot;color: rgb(118, 154, 165);&quot;&gt;Option&lt;/span&gt;) &lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color: rgb(118, 154, 165);&quot;&gt;Hertz &lt;/span&gt;{&lt;br&gt;    h &lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color: rgb(102, 217, 239);&quot;&gt;New&lt;/span&gt;(opts...)&lt;br&gt;    h.&lt;span style=&quot;color: rgb(102, 217, 239);&quot;&gt;Use&lt;/span&gt;(recovery.&lt;span style=&quot;color: rgb(102, 217, 239);&quot;&gt;Recovery&lt;/span&gt;())&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;return &lt;/span&gt;h&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;New&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; creates a hertz instance without any default config.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;New&lt;/span&gt;(opts ...config.&lt;span style=&quot;color:#769aa5;&quot;&gt;Option&lt;/span&gt;) &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Hertz &lt;/span&gt;{&lt;br&gt;    options &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;config.&lt;span style=&quot;color:#66d9ef;&quot;&gt;NewOptions&lt;/span&gt;(opts)&lt;br&gt;    h &lt;span style=&quot;color:#f92672;&quot;&gt;:= &amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Hertz&lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;font-style:italic;&quot;&gt;Engine&lt;/span&gt;: route.&lt;span style=&quot;color:#66d9ef;&quot;&gt;NewEngine&lt;/span&gt;(options),&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;h&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;Default&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; creates a hertz instance with default middlewares.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;Default&lt;/span&gt;(opts ...config.&lt;span style=&quot;color:#769aa5;&quot;&gt;Option&lt;/span&gt;) &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Hertz &lt;/span&gt;{&lt;br&gt;    h &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;New&lt;/span&gt;(opts...)&lt;br&gt;    h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Use&lt;/span&gt;(recovery.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Recovery&lt;/span&gt;())&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;h&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-2">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="690" y="-280" width="670" height="480" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-6" value="" style="edgeStyle=elbowEdgeStyle;elbow=horizontal;endArrow=classic;html=1;curved=0;rounded=0;endSize=8;startSize=8;exitX=0.995;exitY=0.319;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-1" target="bZFTZhcOLTCebWkoZDsH-2" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="670" y="460" as="sourcePoint" />
            <mxPoint x="720" y="410" as="targetPoint" />
            <Array as="points">
              <mxPoint x="450" y="150" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-7" value="&lt;b&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;创建路由引擎&lt;/font&gt;&lt;/b&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="bZFTZhcOLTCebWkoZDsH-6" vertex="1" connectable="0">
          <mxGeometry x="-0.157" y="1" relative="1" as="geometry">
            <mxPoint x="6" y="-49" as="offset" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(engine &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Use&lt;/span&gt;(middleware ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    engine.&lt;span style=&quot;font-style:italic;&quot;&gt;RouterGroup&lt;/span&gt;.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Use&lt;/span&gt;(middleware...)&lt;br&gt;    engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;rebuild404Handlers&lt;/span&gt;()&lt;br&gt;    engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;rebuild405Handlers&lt;/span&gt;()&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;engine&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(engine &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Use&lt;/span&gt;(middleware ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    engine.&lt;span style=&quot;font-style:italic;&quot;&gt;RouterGroup&lt;/span&gt;.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Use&lt;/span&gt;(middleware...)&lt;br&gt;    engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;rebuild404Handlers&lt;/span&gt;()&lt;br&gt;    engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;rebuild405Handlers&lt;/span&gt;()&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;engine&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-8">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="690" y="240" width="720" height="160" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-9" value="" style="edgeStyle=elbowEdgeStyle;elbow=horizontal;endArrow=classic;html=1;curved=0;rounded=0;endSize=8;startSize=8;exitX=0.995;exitY=0.379;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-1" target="bZFTZhcOLTCebWkoZDsH-8" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="460" y="333" as="sourcePoint" />
            <mxPoint x="700" y="-30" as="targetPoint" />
            <Array as="points">
              <mxPoint x="575" y="290" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-10" value="&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;添加中间件函数&lt;/b&gt;&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="bZFTZhcOLTCebWkoZDsH-9" vertex="1" connectable="0">
          <mxGeometry x="-0.157" y="1" relative="1" as="geometry">
            <mxPoint x="34" as="offset" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Use&lt;/span&gt;(middleware ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    group.&lt;span style=&quot;font-style:italic;&quot;&gt;Handlers &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(group.&lt;span style=&quot;font-style:italic;&quot;&gt;Handlers&lt;/span&gt;, middleware...)&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;returnObj&lt;/span&gt;()&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Use&lt;/span&gt;(middleware ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    group.&lt;span style=&quot;font-style:italic;&quot;&gt;Handlers &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(group.&lt;span style=&quot;font-style:italic;&quot;&gt;Handlers&lt;/span&gt;, middleware...)&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;returnObj&lt;/span&gt;()&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-11">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="1470" y="245" width="760" height="115" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-12" value="" style="endArrow=classic;html=1;rounded=0;exitX=1.001;exitY=0.341;exitDx=0;exitDy=0;exitPerimeter=0;entryX=-0.006;entryY=0.43;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-8" target="bZFTZhcOLTCebWkoZDsH-11" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1450" y="270" as="sourcePoint" />
            <mxPoint x="1500" y="220" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-13" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;RouterGroup &lt;span style=&quot;color:#f92672;&quot;&gt;struct &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;font-style:italic;&quot;&gt;Handlers &lt;/span&gt;app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;basePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;engine   &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;root     &lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1420" y="50" width="330" height="160" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-14" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;HandlerFunc &lt;span style=&quot;color:#f92672;&quot;&gt;func&lt;/span&gt;(c context.&lt;span style=&quot;color:#769aa5;&quot;&gt;Context&lt;/span&gt;, ctx &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RequestContext&lt;/span&gt;)&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;HandlersChain&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; defines a &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;HandlerFunc&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; array.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;HandlersChain []&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1820" y="70" width="670" height="150" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-15" value="" style="endArrow=classic;html=1;rounded=0;entryX=0;entryY=0.75;entryDx=0;entryDy=0;exitX=1.003;exitY=0.372;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-13" target="bZFTZhcOLTCebWkoZDsH-14" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1760" y="110" as="sourcePoint" />
            <mxPoint x="1770" y="220" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-16" value="" style="endArrow=classic;html=1;rounded=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=0.421;exitY=0.13;exitDx=0;exitDy=0;exitPerimeter=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-11" target="bZFTZhcOLTCebWkoZDsH-13" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1930" y="-70" as="sourcePoint" />
            <mxPoint x="1999" y="3" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;Engine &lt;span style=&quot;color:#f92672;&quot;&gt;struct &lt;/span&gt;{&lt;br&gt;    noCopy nocopy.&lt;span style=&quot;color:#769aa5;&quot;&gt;NoCopy &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;//lint:ignore U1000 until &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;noCopy&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is used&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // engine name&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;Name       &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;serverName atomic.&lt;span style=&quot;color:#769aa5;&quot;&gt;Value&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Options for route and protocol server&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;options &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;config.&lt;span style=&quot;color:#769aa5;&quot;&gt;Options&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// route&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;trees &lt;span style=&quot;color:#769aa5;&quot;&gt;MethodTrees&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;maxParams &lt;span style=&quot;color:#769aa5;&quot;&gt;uint16&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;allNoMethod app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;allNoRoute  app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;noRoute     app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;noMethod    app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// For render HTML&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;delims     render.&lt;span style=&quot;color:#769aa5;&quot;&gt;Delims&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;funcMap    template.&lt;span style=&quot;color:#769aa5;&quot;&gt;FuncMap&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;htmlRender render.&lt;span style=&quot;color:#769aa5;&quot;&gt;HTMLRender&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;NoHijackConnPool&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; will control whether invite pool to acquire/release the hijackConn or not.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // If it is difficult to guarantee that hijackConn will not be closed repeatedly, set it to true.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;NoHijackConnPool &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;hijackConnPool   sync.&lt;span style=&quot;color:#769aa5;&quot;&gt;Pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;KeepHijackedConns&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is an opt-in disable of connection&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // close by hertz after connections&#39; HijackHandler returns.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // This allows to save goroutines, e.g. when hertz used to upgrade&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // http connections to WS and connection goes to another handler,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // which will close it when needed.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;KeepHijackedConns &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// underlying &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;transport&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;    &lt;/span&gt;transport network.&lt;span style=&quot;color:#769aa5;&quot;&gt;Transporter&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// trace&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;tracerCtl   tracer.&lt;span style=&quot;color:#769aa5;&quot;&gt;Controller&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;enableTrace &lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// protocol layer management&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;protocolSuite         &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;suite.&lt;span style=&quot;color:#769aa5;&quot;&gt;Config&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;protocolServers       &lt;span style=&quot;color:#f92672;&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;]protocol.&lt;span style=&quot;color:#769aa5;&quot;&gt;Server&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;protocolStreamServers &lt;span style=&quot;color:#f92672;&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;]protocol.&lt;span style=&quot;color:#769aa5;&quot;&gt;StreamServer&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// RequestContext pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;ctxPool sync.&lt;span style=&quot;color:#769aa5;&quot;&gt;Pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Function to handle panics recovered from http handlers.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // It should be used to generate an error page and return the http error code&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // 500 (Internal Server Error).&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // The handler can be used to keep your server from crashing because of&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // unrecovered panics.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;PanicHandler &lt;/span&gt;app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;ContinueHandler&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is called after receiving the Expect 100 Continue Header&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    //&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // https://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.2.3&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.1.1&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // Using &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;ContinueHandler&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; a server can make decisioning on whether or not&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // to read a potentially large request body based on the headers&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    //&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // The default is to automatically read request bodies of Expect 100 Continue requests&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // like they are normal requests&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;ContinueHandler &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func&lt;/span&gt;(header &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;protocol.&lt;span style=&quot;color:#769aa5;&quot;&gt;RequestHeader&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Indicates the engine &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;status&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;Init&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;/Running/Shutdown/Closed).&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;status &lt;span style=&quot;color:#769aa5;&quot;&gt;uint32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Hook functions get triggered sequentially when engine start&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;OnRun &lt;/span&gt;[]&lt;span style=&quot;color:#769aa5;&quot;&gt;CtxErrCallback&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Hook functions get triggered simultaneously when engine shutdown&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;OnShutdown &lt;/span&gt;[]&lt;span style=&quot;color:#769aa5;&quot;&gt;CtxCallback&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Custom Functions&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;clientIPFunc  app.&lt;span style=&quot;color:#769aa5;&quot;&gt;ClientIP&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;formValueFunc app.&lt;span style=&quot;color:#769aa5;&quot;&gt;FormValueFunc&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Custom Binder and Validator&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;binder    binding.&lt;span style=&quot;color:#769aa5;&quot;&gt;Binder&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;validator binding.&lt;span style=&quot;color:#769aa5;&quot;&gt;StructValidator&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;Engine &lt;span style=&quot;color:#f92672;&quot;&gt;struct &lt;/span&gt;{&lt;br&gt;    noCopy nocopy.&lt;span style=&quot;color:#769aa5;&quot;&gt;NoCopy &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;//lint:ignore U1000 until &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;noCopy&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is used&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // engine name&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;Name       &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;serverName atomic.&lt;span style=&quot;color:#769aa5;&quot;&gt;Value&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Options for route and protocol server&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;options &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;config.&lt;span style=&quot;color:#769aa5;&quot;&gt;Options&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// route&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;trees &lt;span style=&quot;color:#769aa5;&quot;&gt;MethodTrees&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;maxParams &lt;span style=&quot;color:#769aa5;&quot;&gt;uint16&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;allNoMethod app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;allNoRoute  app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;noRoute     app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;noMethod    app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// For render HTML&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;delims     render.&lt;span style=&quot;color:#769aa5;&quot;&gt;Delims&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;funcMap    template.&lt;span style=&quot;color:#769aa5;&quot;&gt;FuncMap&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;htmlRender render.&lt;span style=&quot;color:#769aa5;&quot;&gt;HTMLRender&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;NoHijackConnPool&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; will control whether invite pool to acquire/release the hijackConn or not.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // If it is difficult to guarantee that hijackConn will not be closed repeatedly, set it to true.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;NoHijackConnPool &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;hijackConnPool   sync.&lt;span style=&quot;color:#769aa5;&quot;&gt;Pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;KeepHijackedConns&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is an opt-in disable of connection&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // close by hertz after connections&#39; HijackHandler returns.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // This allows to save goroutines, e.g. when hertz used to upgrade&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // http connections to WS and connection goes to another handler,&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // which will close it when needed.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;KeepHijackedConns &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// underlying &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;transport&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;    &lt;/span&gt;transport network.&lt;span style=&quot;color:#769aa5;&quot;&gt;Transporter&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// trace&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;tracerCtl   tracer.&lt;span style=&quot;color:#769aa5;&quot;&gt;Controller&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;enableTrace &lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// protocol layer management&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;protocolSuite         &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;suite.&lt;span style=&quot;color:#769aa5;&quot;&gt;Config&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;protocolServers       &lt;span style=&quot;color:#f92672;&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;]protocol.&lt;span style=&quot;color:#769aa5;&quot;&gt;Server&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;protocolStreamServers &lt;span style=&quot;color:#f92672;&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;]protocol.&lt;span style=&quot;color:#769aa5;&quot;&gt;StreamServer&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// RequestContext pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;ctxPool sync.&lt;span style=&quot;color:#769aa5;&quot;&gt;Pool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Function to handle panics recovered from http handlers.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // It should be used to generate an error page and return the http error code&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // 500 (Internal Server Error).&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // The handler can be used to keep your server from crashing because of&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // unrecovered panics.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;PanicHandler &lt;/span&gt;app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;ContinueHandler&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is called after receiving the Expect 100 Continue Header&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    //&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // https://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.2.3&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.1.1&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // Using &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;ContinueHandler&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; a server can make decisioning on whether or not&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // to read a potentially large request body based on the headers&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    //&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // The default is to automatically read request bodies of Expect 100 Continue requests&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    // like they are normal requests&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;ContinueHandler &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func&lt;/span&gt;(header &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;protocol.&lt;span style=&quot;color:#769aa5;&quot;&gt;RequestHeader&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Indicates the engine &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;status&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;Init&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;/Running/Shutdown/Closed).&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;status &lt;span style=&quot;color:#769aa5;&quot;&gt;uint32&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Hook functions get triggered sequentially when engine start&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;OnRun &lt;/span&gt;[]&lt;span style=&quot;color:#769aa5;&quot;&gt;CtxErrCallback&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Hook functions get triggered simultaneously when engine shutdown&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;OnShutdown &lt;/span&gt;[]&lt;span style=&quot;color:#769aa5;&quot;&gt;CtxCallback&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Custom Functions&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;clientIPFunc  app.&lt;span style=&quot;color:#769aa5;&quot;&gt;ClientIP&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;formValueFunc app.&lt;span style=&quot;color:#769aa5;&quot;&gt;FormValueFunc&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Custom Binder and Validator&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;binder    binding.&lt;span style=&quot;color:#769aa5;&quot;&gt;Binder&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;validator binding.&lt;span style=&quot;color:#769aa5;&quot;&gt;StructValidator&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-17">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="-620" y="-1950" width="1110" height="1910" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-18" value="" style="endArrow=classic;html=1;rounded=0;exitX=0;exitY=0;exitDx=0;exitDy=0;entryX=1;entryY=0.75;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-2" target="bZFTZhcOLTCebWkoZDsH-17" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="240" y="-420" as="sourcePoint" />
            <mxPoint x="290" y="-470" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Group&lt;/span&gt;(relativePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;font-style:italic;&quot;&gt;Handlers&lt;/span&gt;: group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;combineHandlers&lt;/span&gt;(handlers),&lt;br&gt;       basePath: group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;calculateAbsolutePath&lt;/span&gt;(relativePath),&lt;br&gt;       engine:   group.engine,&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Group&lt;/span&gt;(relativePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;font-style:italic;&quot;&gt;Handlers&lt;/span&gt;: group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;combineHandlers&lt;/span&gt;(handlers),&lt;br&gt;       basePath: group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;calculateAbsolutePath&lt;/span&gt;(relativePath),&lt;br&gt;       engine:   group.engine,&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-19">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="690" y="500" width="1050" height="180" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-20" value="" style="edgeStyle=elbowEdgeStyle;elbow=horizontal;endArrow=classic;html=1;curved=0;rounded=0;endSize=8;startSize=8;exitX=0.994;exitY=0.427;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitPerimeter=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-1" target="bZFTZhcOLTCebWkoZDsH-19" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="197" y="461" as="sourcePoint" />
            <mxPoint x="690" y="430" as="targetPoint" />
            <Array as="points">
              <mxPoint x="450" y="490" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-21" value="&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;创建路由组&lt;/b&gt;&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="bZFTZhcOLTCebWkoZDsH-20" vertex="1" connectable="0">
          <mxGeometry x="-0.157" y="1" relative="1" as="geometry">
            <mxPoint x="-1" y="62" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-22" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;RequestContext &lt;span style=&quot;color:#f92672;&quot;&gt;struct &lt;/span&gt;{&lt;br&gt;    conn     network.&lt;span style=&quot;color:#769aa5;&quot;&gt;Conn&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;Request  &lt;/span&gt;protocol.&lt;span style=&quot;color:#769aa5;&quot;&gt;Request&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;Response &lt;/span&gt;protocol.&lt;span style=&quot;color:#769aa5;&quot;&gt;Response&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;Errors&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is a list of errors attached to all the handlers/middlewares who used this context.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;Errors &lt;/span&gt;errors.&lt;span style=&quot;color:#769aa5;&quot;&gt;ErrorChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;Params     &lt;/span&gt;param.&lt;span style=&quot;color:#769aa5;&quot;&gt;Params&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;handlers   &lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;fullPath   &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;index      &lt;span style=&quot;color:#769aa5;&quot;&gt;int8&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;HTMLRender &lt;/span&gt;render.&lt;span style=&quot;color:#769aa5;&quot;&gt;HTMLRender&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// This mutex protect &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;Keys&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; map.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;mu sync.&lt;span style=&quot;color:#769aa5;&quot;&gt;RWMutex&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;Keys&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is a key/value pair exclusively for the context of each request.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;Keys &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#f92672;&quot;&gt;interface&lt;/span&gt;{}&lt;br&gt;&lt;br&gt;    hijackHandler &lt;span style=&quot;color:#769aa5;&quot;&gt;HijackHandler&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;finishedMu sync.&lt;span style=&quot;color:#769aa5;&quot;&gt;Mutex&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;finished&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; means the request end.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;finished &lt;span style=&quot;color:#f92672;&quot;&gt;chan struct&lt;/span&gt;{}&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;traceInfo&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; defines the trace information.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;traceInfo traceinfo.&lt;span style=&quot;color:#769aa5;&quot;&gt;TraceInfo&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;enableTrace&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; defines whether enable trace.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;enableTrace &lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;clientIPFunc&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; get client ip by use custom function.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;clientIPFunc &lt;span style=&quot;color:#769aa5;&quot;&gt;ClientIP&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;clientIPFunc&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; get form value by use custom function.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;formValueFunc &lt;span style=&quot;color:#769aa5;&quot;&gt;FormValueFunc&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;binder    binding.&lt;span style=&quot;color:#769aa5;&quot;&gt;Binder&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;validator binding.&lt;span style=&quot;color:#769aa5;&quot;&gt;StructValidator&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;exiled    &lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1430" y="-960" width="1060" height="950" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-23" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.75;exitY=0;exitDx=0;exitDy=0;entryX=0.75;entryY=1;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-14" target="bZFTZhcOLTCebWkoZDsH-22" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2680" y="-150" as="sourcePoint" />
            <mxPoint x="2730" y="-200" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;POST&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is a shortcut for router.Handle(&quot;POST&quot;, path, handle).&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;POST&lt;/span&gt;(relativePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;handle&lt;/span&gt;(consts.MethodPost, relativePath, handlers)&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;GET&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is a shortcut for router.Handle(&quot;GET&quot;, path, handle).&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;GET&lt;/span&gt;(relativePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;handle&lt;/span&gt;(consts.MethodGet, relativePath, handlers)&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;POST&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is a shortcut for router.Handle(&quot;POST&quot;, path, handle).&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;POST&lt;/span&gt;(relativePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;handle&lt;/span&gt;(consts.MethodPost, relativePath, handlers)&lt;br&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;GET&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; is a shortcut for router.Handle(&quot;GET&quot;, path, handle).&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;GET&lt;/span&gt;(relativePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers ...app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlerFunc&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;handle&lt;/span&gt;(consts.MethodGet, relativePath, handlers)&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-25">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="690" y="730" width="980" height="220" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-26" value="" style="edgeStyle=elbowEdgeStyle;elbow=horizontal;endArrow=classic;html=1;curved=0;rounded=0;endSize=8;startSize=8;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-1" target="bZFTZhcOLTCebWkoZDsH-25" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="140" y="630" as="sourcePoint" />
            <mxPoint x="634" y="848" as="targetPoint" />
            <Array as="points">
              <mxPoint x="394" y="748" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-27" value="&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;添加路由&lt;/b&gt;&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="bZFTZhcOLTCebWkoZDsH-26" vertex="1" connectable="0">
          <mxGeometry x="-0.157" y="1" relative="1" as="geometry">
            <mxPoint x="-1" y="62" as="offset" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;handle&lt;/span&gt;(httpMethod, relativePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    absolutePath &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;calculateAbsolutePath&lt;/span&gt;(relativePath)&lt;br&gt;    handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;combineHandlers&lt;/span&gt;(handlers)&lt;br&gt;    group.engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;addRoute&lt;/span&gt;(httpMethod, absolutePath, handlers)&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;returnObj&lt;/span&gt;()&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(group &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;RouterGroup&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;handle&lt;/span&gt;(httpMethod, relativePath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;IRoutes &lt;/span&gt;{&lt;br&gt;    absolutePath &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;calculateAbsolutePath&lt;/span&gt;(relativePath)&lt;br&gt;    handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;combineHandlers&lt;/span&gt;(handlers)&lt;br&gt;    group.engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;addRoute&lt;/span&gt;(httpMethod, absolutePath, handlers)&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;group.&lt;span style=&quot;color:#66d9ef;&quot;&gt;returnObj&lt;/span&gt;()&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-30">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="1760" y="762.5" width="1120" height="155" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-31" value="" style="endArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-25" target="bZFTZhcOLTCebWkoZDsH-30" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1870" y="620" as="sourcePoint" />
            <mxPoint x="2160" y="580" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-32" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;router &lt;span style=&quot;color:#f92672;&quot;&gt;struct &lt;/span&gt;{&lt;br&gt;    method        &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;root          &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;hasTsrHandler &lt;span style=&quot;color:#f92672;&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;}&lt;br&gt;&lt;br&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;MethodTrees []&lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;router&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="800" y="-1870" width="360" height="180" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-33" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;type &lt;/span&gt;(&lt;br&gt;    node &lt;span style=&quot;color:#f92672;&quot;&gt;struct &lt;/span&gt;{&lt;br&gt;       kind     &lt;span style=&quot;color:#769aa5;&quot;&gt;kind&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;label    &lt;span style=&quot;color:#769aa5;&quot;&gt;byte&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;prefix   &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;parent   &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;children &lt;span style=&quot;color:#769aa5;&quot;&gt;children&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// original path&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;       &lt;/span&gt;ppath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// param names&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;       &lt;/span&gt;pnames     []&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;handlers   app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;anyChild   &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;       &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;isLeaf&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; indicates that &lt;/span&gt;&lt;span style=&quot;color:#a1a1a1;&quot;&gt;node&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt; does not have child routes&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;       &lt;/span&gt;isLeaf &lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;}&lt;br&gt;    kind     &lt;span style=&quot;color:#769aa5;&quot;&gt;uint8&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;    &lt;/span&gt;children []&lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;node&lt;br&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="800" y="-1610" width="560" height="490" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-34" value="" style="endArrow=classic;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" target="bZFTZhcOLTCebWkoZDsH-32" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="490" y="-1690" as="sourcePoint" />
            <mxPoint x="740" y="-1430" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-35" value="" style="endArrow=classic;html=1;rounded=0;entryX=0.25;entryY=0;entryDx=0;entryDy=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-32" target="bZFTZhcOLTCebWkoZDsH-33" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="550" y="-1560" as="sourcePoint" />
            <mxPoint x="860" y="-1650" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(engine &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;addRoute&lt;/span&gt;(method, path &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(path) &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0 &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;path should not be &#39;&#39;&quot;&lt;/span&gt;)&lt;br&gt;    }&lt;br&gt;    utils.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Assert&lt;/span&gt;(path[&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;] &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&#39;/&#39;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;path must begin with &#39;/&#39;&quot;&lt;/span&gt;)&lt;br&gt;    utils.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Assert&lt;/span&gt;(method &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;HTTP method can not be empty&quot;&lt;/span&gt;)&lt;br&gt;    utils.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Assert&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(handlers) &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;there must be at least one handler&quot;&lt;/span&gt;)&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if !&lt;/span&gt;engine.options.&lt;span style=&quot;font-style:italic;&quot;&gt;DisablePrintRoute &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;debugPrintRoute&lt;/span&gt;(method, path, handlers)&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    methodRouter &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;engine.trees.&lt;span style=&quot;color:#66d9ef;&quot;&gt;get&lt;/span&gt;(method)&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;methodRouter &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       methodRouter &lt;span style=&quot;color:#f92672;&quot;&gt;= &amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;router&lt;/span&gt;{method: method, root: &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;node&lt;/span&gt;{}, hasTsrHandler: &lt;span style=&quot;color:#a6e22e;&quot;&gt;make&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;/span&gt;)}&lt;br&gt;       engine.trees &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(engine.trees, methodRouter)&lt;br&gt;    }&lt;br&gt;    methodRouter.&lt;span style=&quot;color:#66d9ef;&quot;&gt;addRoute&lt;/span&gt;(path, handlers)&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// Update maxParams&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;paramsCount &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;countParams&lt;/span&gt;(path); paramsCount &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt; &lt;/span&gt;engine.maxParams {&lt;br&gt;       engine.maxParams &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;paramsCount&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(engine &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;addRoute&lt;/span&gt;(method, path &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, handlers app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(path) &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0 &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;path should not be &#39;&#39;&quot;&lt;/span&gt;)&lt;br&gt;    }&lt;br&gt;    utils.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Assert&lt;/span&gt;(path[&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;] &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&#39;/&#39;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;path must begin with &#39;/&#39;&quot;&lt;/span&gt;)&lt;br&gt;    utils.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Assert&lt;/span&gt;(method &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;HTTP method can not be empty&quot;&lt;/span&gt;)&lt;br&gt;    utils.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Assert&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(handlers) &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;there must be at least one handler&quot;&lt;/span&gt;)&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if !&lt;/span&gt;engine.options.&lt;span style=&quot;font-style:italic;&quot;&gt;DisablePrintRoute &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;debugPrintRoute&lt;/span&gt;(method, path, handlers)&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    methodRouter &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;engine.trees.&lt;span style=&quot;color:#66d9ef;&quot;&gt;get&lt;/span&gt;(method)&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;methodRouter &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       methodRouter &lt;span style=&quot;color:#f92672;&quot;&gt;= &amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;router&lt;/span&gt;{method: method, root: &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;node&lt;/span&gt;{}, hasTsrHandler: &lt;span style=&quot;color:#a6e22e;&quot;&gt;make&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;map&lt;/span&gt;[&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;]&lt;span style=&quot;color:#769aa5;&quot;&gt;bool&lt;/span&gt;)}&lt;br&gt;       engine.trees &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(engine.trees, methodRouter)&lt;br&gt;    }&lt;br&gt;    methodRouter.&lt;span style=&quot;color:#66d9ef;&quot;&gt;addRoute&lt;/span&gt;(path, handlers)&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// Update maxParams&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;paramsCount &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;countParams&lt;/span&gt;(path); paramsCount &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt; &lt;/span&gt;engine.maxParams {&lt;br&gt;       engine.maxParams &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;paramsCount&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-36">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="2970" y="580" width="1070" height="550" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-37" value="" style="endArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-30" target="bZFTZhcOLTCebWkoZDsH-36" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="3060" y="1040" as="sourcePoint" />
            <mxPoint x="3110" y="990" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-38" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(r &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;router&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;addRoute&lt;/span&gt;(path &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, h app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color:#66d9ef;&quot;&gt;checkPathValid&lt;/span&gt;(path)&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;var &lt;/span&gt;(&lt;br&gt;       pnames []&lt;span style=&quot;color:#769aa5;&quot;&gt;string &lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;// Param names&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;       &lt;/span&gt;ppath  &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;path   &lt;span style=&quot;color:#75715e;&quot;&gt;// Pristine path&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;)&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;h &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(fmt.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Sprintf&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;Adding route without handler function: &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%v&lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&lt;/span&gt;, path))&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// Add the front static route part of a non-static route&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;i, lcpIndex &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(path); i &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;lcpIndex; i&lt;span style=&quot;color:#f92672;&quot;&gt;++ &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#75715e;&quot;&gt;// param route&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;       &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;path[i] &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;paramLabel {&lt;br&gt;          j &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;i &lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;          &lt;/span&gt;r.&lt;span style=&quot;color:#66d9ef;&quot;&gt;insert&lt;/span&gt;(path[:i], &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, skind, nilString, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;)&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;; i &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;lcpIndex &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;path[i] &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&#39;/&#39;&lt;/span&gt;; i&lt;span style=&quot;color:#f92672;&quot;&gt;++ &lt;/span&gt;{&lt;br&gt;          }&lt;br&gt;&lt;br&gt;          pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(pnames, path[j:i])&lt;br&gt;          path &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;path[:j] &lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;/span&gt;path[i:]&lt;br&gt;          i, lcpIndex &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;j, &lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(path)&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;i &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;lcpIndex {&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// path node is last fragment of route path. ie. `/users/:id`&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;r.&lt;span style=&quot;color:#66d9ef;&quot;&gt;insert&lt;/span&gt;(path[:i], h, pkind, ppath, pnames)&lt;br&gt;             &lt;span style=&quot;color:#f92672;&quot;&gt;return&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;          &lt;/span&gt;} &lt;span style=&quot;color:#f92672;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;             r.&lt;span style=&quot;color:#66d9ef;&quot;&gt;insert&lt;/span&gt;(path[:i], &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, pkind, nilString, pnames)&lt;br&gt;          }&lt;br&gt;       } &lt;span style=&quot;color:#f92672;&quot;&gt;else if &lt;/span&gt;path[i] &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;anyLabel {&lt;br&gt;          r.&lt;span style=&quot;color:#66d9ef;&quot;&gt;insert&lt;/span&gt;(path[:i], &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, skind, nilString, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;)&lt;br&gt;          pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(pnames, path[i&lt;span style=&quot;color:#f92672;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;/span&gt;:])&lt;br&gt;          r.&lt;span style=&quot;color:#66d9ef;&quot;&gt;insert&lt;/span&gt;(path[:i&lt;span style=&quot;color:#f92672;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;1&lt;/span&gt;], h, akind, ppath, pnames)&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;return&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;       &lt;/span&gt;}&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    r.&lt;span style=&quot;color:#66d9ef;&quot;&gt;insert&lt;/span&gt;(path, h, skind, ppath, pnames)&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2020" y="980" width="830" height="960" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-39" value="" style="endArrow=classic;html=1;rounded=0;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=1;entryY=0.25;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-36" target="bZFTZhcOLTCebWkoZDsH-38" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="2920" y="1130" as="sourcePoint" />
            <mxPoint x="2890" y="1280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(r &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;router&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;insert&lt;/span&gt;(path &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, h app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;/span&gt;, t &lt;span style=&quot;color:#769aa5;&quot;&gt;kind&lt;/span&gt;, ppath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, pnames []&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;) {&lt;br&gt;    currentNode &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;r.root&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;currentNode &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;hertz: invalid node&quot;&lt;/span&gt;)&lt;br&gt;    }&lt;br&gt;    search &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;path&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;{&lt;br&gt;       searchLen &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(search)&lt;br&gt;       prefixLen &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(currentNode.prefix)&lt;br&gt;       lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;       &lt;/span&gt;&lt;span style=&quot;color:#7dbda2;&quot;&gt;max &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;prefixLen&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;searchLen &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;&lt;span style=&quot;color:#7dbda2;&quot;&gt;max &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#7dbda2;&quot;&gt;max &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;searchLen&lt;br&gt;       }&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;; lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;&lt;span style=&quot;color:#7dbda2;&quot;&gt;max &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;search[lcpLen] &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;currentNode.prefix[lcpLen]; lcpLen&lt;span style=&quot;color:#f92672;&quot;&gt;++ &lt;/span&gt;{&lt;br&gt;       }&lt;br&gt;&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0 &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// At root node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;currentNode.label &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;search[&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;]&lt;br&gt;          currentNode.prefix &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;search&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;h &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             currentNode.kind &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;t&lt;br&gt;             currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;h&lt;br&gt;             currentNode.ppath &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;ppath&lt;br&gt;             currentNode.pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;pnames&lt;br&gt;          }&lt;br&gt;          currentNode.isLeaf &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;       &lt;/span&gt;} &lt;span style=&quot;color:#f92672;&quot;&gt;else if &lt;/span&gt;lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;prefixLen {&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Split node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;n &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;newNode&lt;/span&gt;(&lt;br&gt;             currentNode.kind,&lt;br&gt;             currentNode.prefix[lcpLen:],&lt;br&gt;             currentNode,&lt;br&gt;             currentNode.children,&lt;br&gt;             currentNode.handlers,&lt;br&gt;             currentNode.ppath,&lt;br&gt;             currentNode.pnames,&lt;br&gt;             currentNode.paramChild,&lt;br&gt;             currentNode.anyChild,&lt;br&gt;          )&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Update parent path for all children to new node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;_, child &lt;span style=&quot;color:#f92672;&quot;&gt;:= range &lt;/span&gt;currentNode.children {&lt;br&gt;             child.parent &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          }&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             currentNode.paramChild.parent &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          }&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             currentNode.anyChild.parent &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          }&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Reset parent node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;currentNode.kind &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;skind&lt;br&gt;          currentNode.label &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.prefix[&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;]&lt;br&gt;          currentNode.prefix &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.prefix[:lcpLen]&lt;br&gt;          currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.ppath &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;nilString&lt;br&gt;          currentNode.pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.isLeaf &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;false&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Only Static children could reach here&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(currentNode.children, n)&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;searchLen {&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// At parent node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;currentNode.kind &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;t&lt;br&gt;             currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;h&lt;br&gt;             currentNode.ppath &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;ppath&lt;br&gt;             currentNode.pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;pnames&lt;br&gt;          } &lt;span style=&quot;color:#f92672;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// Create child node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;n &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;newNode&lt;/span&gt;(t, search[lcpLen:], currentNode, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, h, ppath, pnames, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;)&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// Only Static children could reach here&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(currentNode.children, n)&lt;br&gt;          }&lt;br&gt;          currentNode.isLeaf &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;       &lt;/span&gt;} &lt;span style=&quot;color:#f92672;&quot;&gt;else if &lt;/span&gt;lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;searchLen {&lt;br&gt;          search &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;search[lcpLen:]&lt;br&gt;          c &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;currentNode.&lt;span style=&quot;color:#66d9ef;&quot;&gt;findChildWithLabel&lt;/span&gt;(search[&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;])&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;c &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// Go deeper&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;currentNode &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;c&lt;br&gt;             &lt;span style=&quot;color:#f92672;&quot;&gt;continue&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;          &lt;/span&gt;}&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Create child node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;n &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;newNode&lt;/span&gt;(t, search, currentNode, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, h, ppath, pnames, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;)&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;switch &lt;/span&gt;t {&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;case &lt;/span&gt;skind:&lt;br&gt;             currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(currentNode.children, n)&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;case &lt;/span&gt;pkind:&lt;br&gt;             currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;case &lt;/span&gt;akind:&lt;br&gt;             currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          }&lt;br&gt;          currentNode.isLeaf &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;       &lt;/span&gt;} &lt;span style=&quot;color:#f92672;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Node already exists&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;h &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;handlers are already registered for path &#39;&quot; &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;/span&gt;ppath &lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&#39;&quot;&lt;/span&gt;)&lt;br&gt;          }&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;h &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;h&lt;br&gt;             currentNode.ppath &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;ppath&lt;br&gt;             currentNode.pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;pnames&lt;br&gt;          }&lt;br&gt;       }&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;return&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;    &lt;/span&gt;}&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(r &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;router&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;insert&lt;/span&gt;(path &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, h app.&lt;span style=&quot;color:#769aa5;&quot;&gt;HandlersChain&lt;/span&gt;, t &lt;span style=&quot;color:#769aa5;&quot;&gt;kind&lt;/span&gt;, ppath &lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;, pnames []&lt;span style=&quot;color:#769aa5;&quot;&gt;string&lt;/span&gt;) {&lt;br&gt;    currentNode &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;r.root&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;currentNode &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;hertz: invalid node&quot;&lt;/span&gt;)&lt;br&gt;    }&lt;br&gt;    search &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;path&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;{&lt;br&gt;       searchLen &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(search)&lt;br&gt;       prefixLen &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;len&lt;/span&gt;(currentNode.prefix)&lt;br&gt;       lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;       &lt;/span&gt;&lt;span style=&quot;color:#7dbda2;&quot;&gt;max &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;prefixLen&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;searchLen &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;&lt;span style=&quot;color:#7dbda2;&quot;&gt;max &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#7dbda2;&quot;&gt;max &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;searchLen&lt;br&gt;       }&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;; lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;&lt;span style=&quot;color:#7dbda2;&quot;&gt;max &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;search[lcpLen] &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;currentNode.prefix[lcpLen]; lcpLen&lt;span style=&quot;color:#f92672;&quot;&gt;++ &lt;/span&gt;{&lt;br&gt;       }&lt;br&gt;&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0 &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// At root node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;currentNode.label &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;search[&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;]&lt;br&gt;          currentNode.prefix &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;search&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;h &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             currentNode.kind &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;t&lt;br&gt;             currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;h&lt;br&gt;             currentNode.ppath &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;ppath&lt;br&gt;             currentNode.pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;pnames&lt;br&gt;          }&lt;br&gt;          currentNode.isLeaf &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;       &lt;/span&gt;} &lt;span style=&quot;color:#f92672;&quot;&gt;else if &lt;/span&gt;lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;prefixLen {&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Split node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;n &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;newNode&lt;/span&gt;(&lt;br&gt;             currentNode.kind,&lt;br&gt;             currentNode.prefix[lcpLen:],&lt;br&gt;             currentNode,&lt;br&gt;             currentNode.children,&lt;br&gt;             currentNode.handlers,&lt;br&gt;             currentNode.ppath,&lt;br&gt;             currentNode.pnames,&lt;br&gt;             currentNode.paramChild,&lt;br&gt;             currentNode.anyChild,&lt;br&gt;          )&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Update parent path for all children to new node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;_, child &lt;span style=&quot;color:#f92672;&quot;&gt;:= range &lt;/span&gt;currentNode.children {&lt;br&gt;             child.parent &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          }&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             currentNode.paramChild.parent &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          }&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             currentNode.anyChild.parent &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          }&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Reset parent node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;currentNode.kind &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;skind&lt;br&gt;          currentNode.label &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.prefix[&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;]&lt;br&gt;          currentNode.prefix &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.prefix[:lcpLen]&lt;br&gt;          currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.ppath &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;nilString&lt;br&gt;          currentNode.pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;          &lt;/span&gt;currentNode.isLeaf &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;false&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Only Static children could reach here&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(currentNode.children, n)&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;searchLen {&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// At parent node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;currentNode.kind &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;t&lt;br&gt;             currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;h&lt;br&gt;             currentNode.ppath &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;ppath&lt;br&gt;             currentNode.pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;pnames&lt;br&gt;          } &lt;span style=&quot;color:#f92672;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// Create child node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;n &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;newNode&lt;/span&gt;(t, search[lcpLen:], currentNode, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, h, ppath, pnames, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;)&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// Only Static children could reach here&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(currentNode.children, n)&lt;br&gt;          }&lt;br&gt;          currentNode.isLeaf &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;       &lt;/span&gt;} &lt;span style=&quot;color:#f92672;&quot;&gt;else if &lt;/span&gt;lcpLen &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt; &lt;/span&gt;searchLen {&lt;br&gt;          search &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;search[lcpLen:]&lt;br&gt;          c &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;currentNode.&lt;span style=&quot;color:#66d9ef;&quot;&gt;findChildWithLabel&lt;/span&gt;(search[&lt;span style=&quot;color:#ae81ff;&quot;&gt;0&lt;/span&gt;])&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;c &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             &lt;span style=&quot;color:#75715e;&quot;&gt;// Go deeper&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;             &lt;/span&gt;currentNode &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;c&lt;br&gt;             &lt;span style=&quot;color:#f92672;&quot;&gt;continue&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;          &lt;/span&gt;}&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Create child node&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;n &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;newNode&lt;/span&gt;(t, search, currentNode, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, h, ppath, pnames, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;, &lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;/span&gt;)&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;switch &lt;/span&gt;t {&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;case &lt;/span&gt;skind:&lt;br&gt;             currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(currentNode.children, n)&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;case &lt;/span&gt;pkind:&lt;br&gt;             currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;case &lt;/span&gt;akind:&lt;br&gt;             currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;n&lt;br&gt;          }&lt;br&gt;          currentNode.isLeaf &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;currentNode.children &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.paramChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;currentNode.anyChild &lt;span style=&quot;color:#f92672;&quot;&gt;== &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;       &lt;/span&gt;} &lt;span style=&quot;color:#f92672;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#75715e;&quot;&gt;// Node already exists&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;h &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;handlers are already registered for path &#39;&quot; &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;/span&gt;ppath &lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&#39;&quot;&lt;/span&gt;)&lt;br&gt;          }&lt;br&gt;&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;h &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             currentNode.handlers &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;h&lt;br&gt;             currentNode.ppath &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;ppath&lt;br&gt;             currentNode.pnames &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;pnames&lt;br&gt;          }&lt;br&gt;       }&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;return&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;    &lt;/span&gt;}&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-40">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="3120" y="1330" width="1330" height="2530" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-41" value="" style="endArrow=classic;html=1;rounded=0;exitX=1;exitY=1;exitDx=0;exitDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-38" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="3070" y="1510" as="sourcePoint" />
            <mxPoint x="3110" y="1580" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-42" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(h &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Hertz&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Spin&lt;/span&gt;() {&lt;br&gt;    errCh &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;make&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;chan &lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;error&lt;/span&gt;)&lt;br&gt;    h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;initOnRunHooks&lt;/span&gt;(errCh)&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;go func&lt;/span&gt;() {&lt;br&gt;       errCh &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;lt;- &lt;/span&gt;h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Run&lt;/span&gt;()&lt;br&gt;    }()&lt;br&gt;&lt;br&gt;    signalWaiter &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;waitSignal&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#a6e22e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;h.signalWaiter &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       signalWaiter &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;h.signalWaiter&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;signalWaiter&lt;/span&gt;(errCh); err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       hlog.&lt;span style=&quot;color:#66d9ef;&quot;&gt;SystemLogger&lt;/span&gt;().&lt;span style=&quot;color:#66d9ef;&quot;&gt;Errorf&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;Receive close signal: error=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%v&lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&lt;/span&gt;, err)&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;&lt;span style=&quot;color:#7dbda2;&quot;&gt;err &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;h.&lt;span style=&quot;font-style:italic;&quot;&gt;Engine&lt;/span&gt;.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Close&lt;/span&gt;(); &lt;span style=&quot;color:#7dbda2;&quot;&gt;err &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;          hlog.&lt;span style=&quot;color:#66d9ef;&quot;&gt;SystemLogger&lt;/span&gt;().&lt;span style=&quot;color:#66d9ef;&quot;&gt;Errorf&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;Close error=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%v&lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color:#7dbda2;&quot;&gt;err&lt;/span&gt;)&lt;br&gt;       }&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;return&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;    &lt;/span&gt;}&lt;br&gt;&lt;br&gt;    hlog.&lt;span style=&quot;color:#66d9ef;&quot;&gt;SystemLogger&lt;/span&gt;().&lt;span style=&quot;color:#66d9ef;&quot;&gt;Infof&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;Begin graceful shutdown, wait at most num=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%d&lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt; seconds...&quot;&lt;/span&gt;, h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;GetOptions&lt;/span&gt;().&lt;span style=&quot;font-style:italic;&quot;&gt;ExitWaitTimeout&lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;/&lt;/span&gt;time.Second)&lt;br&gt;&lt;br&gt;    ctx, cancel &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;context.&lt;span style=&quot;color:#66d9ef;&quot;&gt;WithTimeout&lt;/span&gt;(context.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Background&lt;/span&gt;(), h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;GetOptions&lt;/span&gt;().&lt;span style=&quot;font-style:italic;&quot;&gt;ExitWaitTimeout&lt;/span&gt;)&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;defer &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;cancel&lt;/span&gt;()&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;h.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Shutdown&lt;/span&gt;(ctx); err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       hlog.&lt;span style=&quot;color:#66d9ef;&quot;&gt;SystemLogger&lt;/span&gt;().&lt;span style=&quot;color:#66d9ef;&quot;&gt;Errorf&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;Shutdown error=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%v&lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&lt;/span&gt;, err)&lt;br&gt;    }&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-750" y="850" width="1430" height="660" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-43" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-1" target="bZFTZhcOLTCebWkoZDsH-42" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="100" y="1090" as="sourcePoint" />
            <mxPoint x="150" y="1040" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(engine &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Run&lt;/span&gt;() (err &lt;span style=&quot;color:#769aa5;&quot;&gt;error&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Init&lt;/span&gt;(); err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;err&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// trigger hooks if any&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;ctx &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;context.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Background&lt;/span&gt;()&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;i &lt;span style=&quot;color:#f92672;&quot;&gt;:= range &lt;/span&gt;engine.&lt;span style=&quot;font-style:italic;&quot;&gt;OnRun &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;engine.&lt;span style=&quot;font-style:italic;&quot;&gt;OnRun&lt;/span&gt;[i](ctx); err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;err&lt;br&gt;       }&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;MarkAsRunning&lt;/span&gt;(); err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;err&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;defer &lt;/span&gt;atomic.&lt;span style=&quot;color:#66d9ef;&quot;&gt;StoreUint32&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&lt;/span&gt;engine.status, statusClosed)&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;listenAndServe&lt;/span&gt;()&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" link="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(engine &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;Run&lt;/span&gt;() (err &lt;span style=&quot;color:#769aa5;&quot;&gt;error&lt;/span&gt;) {&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Init&lt;/span&gt;(); err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;err&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// trigger hooks if any&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;ctx &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;context.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Background&lt;/span&gt;()&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;for &lt;/span&gt;i &lt;span style=&quot;color:#f92672;&quot;&gt;:= range &lt;/span&gt;engine.&lt;span style=&quot;font-style:italic;&quot;&gt;OnRun &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;engine.&lt;span style=&quot;font-style:italic;&quot;&gt;OnRun&lt;/span&gt;[i](ctx); err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;err&lt;br&gt;       }&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;MarkAsRunning&lt;/span&gt;(); err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;err&lt;br&gt;    }&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;defer &lt;/span&gt;atomic.&lt;span style=&quot;color:#66d9ef;&quot;&gt;StoreUint32&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&lt;/span&gt;engine.status, statusClosed)&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;listenAndServe&lt;/span&gt;()&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-44">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="-620" y="1580" width="640" height="460" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-45" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.25;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-42" target="bZFTZhcOLTCebWkoZDsH-44" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="220" y="1630" as="sourcePoint" />
            <mxPoint x="310" y="1900" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-46" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(engine &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;Engine&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;listenAndServe&lt;/span&gt;() &lt;span style=&quot;color:#769aa5;&quot;&gt;error &lt;/span&gt;{&lt;br&gt;    hlog.&lt;span style=&quot;color:#66d9ef;&quot;&gt;SystemLogger&lt;/span&gt;().&lt;span style=&quot;color:#66d9ef;&quot;&gt;Infof&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;Using network library=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&lt;/span&gt;, engine.&lt;span style=&quot;color:#66d9ef;&quot;&gt;GetTransporterName&lt;/span&gt;())&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;engine.transport.&lt;span style=&quot;color:#66d9ef;&quot;&gt;ListenAndServe&lt;/span&gt;(engine.&lt;span style=&quot;color:#a6e22e;&quot;&gt;onData&lt;/span&gt;)&lt;br&gt;}&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-620" y="2080" width="940" height="120" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-47" value="" style="endArrow=classic;html=1;rounded=0;exitX=1;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-44" target="bZFTZhcOLTCebWkoZDsH-46" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="240" y="1700" as="sourcePoint" />
            <mxPoint x="333" y="1770" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-48" value="&lt;div style=&quot;background-color:#272822;color:#f8f8f2&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:13.5pt;&quot;&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;func &lt;/span&gt;(t &lt;span style=&quot;color:#f92672;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#769aa5;&quot;&gt;transporter&lt;/span&gt;) &lt;span style=&quot;color:#a6e22e;&quot;&gt;ListenAndServe&lt;/span&gt;(onReq network.&lt;span style=&quot;color:#769aa5;&quot;&gt;OnData&lt;/span&gt;) (err &lt;span style=&quot;color:#769aa5;&quot;&gt;error&lt;/span&gt;) {&lt;br&gt;    network.&lt;span style=&quot;color:#66d9ef;&quot;&gt;UnlinkUdsFile&lt;/span&gt;(t.network, t.addr) &lt;span style=&quot;color:#75715e;&quot;&gt;//nolint:errcheck&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;t.listenConfig &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       t.listener, err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;t.listenConfig.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Listen&lt;/span&gt;(context.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Background&lt;/span&gt;(), t.network, t.addr)&lt;br&gt;    } &lt;span style=&quot;color:#f92672;&quot;&gt;else &lt;/span&gt;{&lt;br&gt;       t.listener, err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;net.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Listen&lt;/span&gt;(t.network, t.addr)&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;create netpoll listener fail: &quot; &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;+ &lt;/span&gt;err.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Error&lt;/span&gt;())&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// Initialize custom option for EventLoop&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;opts &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;[]netpoll.&lt;span style=&quot;color:#769aa5;&quot;&gt;Option&lt;/span&gt;{&lt;br&gt;       netpoll.&lt;span style=&quot;color:#66d9ef;&quot;&gt;WithIdleTimeout&lt;/span&gt;(t.keepAliveTimeout),&lt;br&gt;       netpoll.&lt;span style=&quot;color:#66d9ef;&quot;&gt;WithOnPrepare&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;func&lt;/span&gt;(conn netpoll.&lt;span style=&quot;color:#769aa5;&quot;&gt;Connection&lt;/span&gt;) context.&lt;span style=&quot;color:#769aa5;&quot;&gt;Context &lt;/span&gt;{&lt;br&gt;          conn.&lt;span style=&quot;color:#66d9ef;&quot;&gt;SetReadTimeout&lt;/span&gt;(t.readTimeout) &lt;span style=&quot;color:#75715e;&quot;&gt;// nolint:errcheck&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;          &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;t.writeTimeout &lt;span style=&quot;color:#f92672;&quot;&gt;&amp;gt; &lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;0 &lt;/span&gt;{&lt;br&gt;             conn.&lt;span style=&quot;color:#66d9ef;&quot;&gt;SetWriteTimeout&lt;/span&gt;(t.writeTimeout)&lt;br&gt;          }&lt;br&gt;          ctx &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;context.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Background&lt;/span&gt;()&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;t.&lt;span style=&quot;font-style:italic;&quot;&gt;OnAccept &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;             ctx &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;t.&lt;span style=&quot;color:#66d9ef;&quot;&gt;OnAccept&lt;/span&gt;(&lt;span style=&quot;color:#66d9ef;&quot;&gt;newConn&lt;/span&gt;(conn))&lt;br&gt;          }&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;t.senseClientDisconnection {&lt;br&gt;             ctx &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;cancelContext&lt;/span&gt;(ctx)&lt;br&gt;          }&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;ctx&lt;br&gt;       }),&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;t.&lt;span style=&quot;font-style:italic;&quot;&gt;OnConnect &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       opts &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(opts, netpoll.&lt;span style=&quot;color:#66d9ef;&quot;&gt;WithOnConnect&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;func&lt;/span&gt;(ctx context.&lt;span style=&quot;color:#769aa5;&quot;&gt;Context&lt;/span&gt;, conn netpoll.&lt;span style=&quot;color:#769aa5;&quot;&gt;Connection&lt;/span&gt;) context.&lt;span style=&quot;color:#769aa5;&quot;&gt;Context &lt;/span&gt;{&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;t.&lt;span style=&quot;color:#66d9ef;&quot;&gt;OnConnect&lt;/span&gt;(ctx, &lt;span style=&quot;color:#66d9ef;&quot;&gt;newConn&lt;/span&gt;(conn))&lt;br&gt;       }))&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;t.senseClientDisconnection {&lt;br&gt;       opts &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#66d9ef;&quot;&gt;append&lt;/span&gt;(opts, netpoll.&lt;span style=&quot;color:#66d9ef;&quot;&gt;WithOnDisconnect&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;func&lt;/span&gt;(ctx context.&lt;span style=&quot;color:#769aa5;&quot;&gt;Context&lt;/span&gt;, connection netpoll.&lt;span style=&quot;color:#769aa5;&quot;&gt;Connection&lt;/span&gt;) {&lt;br&gt;          cancelFunc, ok &lt;span style=&quot;color:#f92672;&quot;&gt;:= &lt;/span&gt;ctx.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Value&lt;/span&gt;(ctxCancelKey).(context.&lt;span style=&quot;color:#769aa5;&quot;&gt;CancelFunc&lt;/span&gt;)&lt;br&gt;          &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;cancelFunc &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;&lt;span style=&quot;color:#f92672;&quot;&gt;&amp;amp;&amp;amp; &lt;/span&gt;ok {&lt;br&gt;             &lt;span style=&quot;color:#66d9ef;&quot;&gt;cancelFunc&lt;/span&gt;()&lt;br&gt;          }&lt;br&gt;       }))&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// Create EventLoop&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;t.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Lock&lt;/span&gt;()&lt;br&gt;    t.eventLoop, err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;netpoll.&lt;span style=&quot;color:#66d9ef;&quot;&gt;NewEventLoop&lt;/span&gt;(&lt;span style=&quot;color:#f92672;&quot;&gt;func&lt;/span&gt;(ctx context.&lt;span style=&quot;color:#769aa5;&quot;&gt;Context&lt;/span&gt;, connection netpoll.&lt;span style=&quot;color:#769aa5;&quot;&gt;Connection&lt;/span&gt;) &lt;span style=&quot;color:#769aa5;&quot;&gt;error &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;onReq(ctx, &lt;span style=&quot;color:#66d9ef;&quot;&gt;newConn&lt;/span&gt;(connection))&lt;br&gt;    }, opts...)&lt;br&gt;    t.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Unlock&lt;/span&gt;()&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;create netpoll event-loop fail&quot;&lt;/span&gt;)&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#75715e;&quot;&gt;// Start Server&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#75715e;&quot;&gt;    &lt;/span&gt;hlog.&lt;span style=&quot;color:#66d9ef;&quot;&gt;SystemLogger&lt;/span&gt;().&lt;span style=&quot;color:#66d9ef;&quot;&gt;Infof&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;HTTP server listening on address=&lt;/span&gt;&lt;span style=&quot;color:#ae81ff;&quot;&gt;%s&lt;/span&gt;&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;&lt;/span&gt;, t.listener.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Addr&lt;/span&gt;().&lt;span style=&quot;color:#66d9ef;&quot;&gt;String&lt;/span&gt;())&lt;br&gt;    t.&lt;span style=&quot;color:#66d9ef;&quot;&gt;RLock&lt;/span&gt;()&lt;br&gt;    err &lt;span style=&quot;color:#f92672;&quot;&gt;= &lt;/span&gt;t.eventLoop.&lt;span style=&quot;color:#66d9ef;&quot;&gt;Serve&lt;/span&gt;(t.listener)&lt;br&gt;    t.&lt;span style=&quot;color:#66d9ef;&quot;&gt;RUnlock&lt;/span&gt;()&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;if &lt;/span&gt;err &lt;span style=&quot;color:#f92672;&quot;&gt;!= &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil &lt;/span&gt;{&lt;br&gt;       &lt;span style=&quot;color:#66d9ef;&quot;&gt;panic&lt;/span&gt;(&lt;span style=&quot;color:#e6db74;&quot;&gt;&quot;netpoll server exit&quot;&lt;/span&gt;)&lt;br&gt;    }&lt;br&gt;&lt;br&gt;    &lt;span style=&quot;color:#f92672;&quot;&gt;return &lt;/span&gt;&lt;span style=&quot;font-style:italic;&quot;&gt;nil&lt;br&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="390" y="1590" width="1270" height="1480" as="geometry" />
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-49" value="" style="endArrow=classic;html=1;rounded=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.25;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-46" target="bZFTZhcOLTCebWkoZDsH-48" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="320" y="2250" as="sourcePoint" />
            <mxPoint x="370" y="2200" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;color: rgb(248, 248, 242); background-color: rgb(39, 40, 34); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-weight: normal; line-height: 18px; white-space: pre;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(136, 132, 111);&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;// 在 server.go 中的请求处理&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;func&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: rgb(253, 151, 31); font-style: italic;&quot;&gt;s &lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46); text-decoration: underline;&quot;&gt;Server&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46);&quot;&gt;Serve&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: rgb(253, 151, 31); font-style: italic;&quot;&gt;c&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46); text-decoration: underline;&quot;&gt;context&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46); text-decoration: underline;&quot;&gt;Context&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: rgb(253, 151, 31); font-style: italic;&quot;&gt;conn&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46); text-decoration: underline;&quot;&gt;network&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46); text-decoration: underline;&quot;&gt;Conn&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;) (&lt;/span&gt;&lt;span style=&quot;color: rgb(253, 151, 31); font-style: italic;&quot;&gt;err&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(102, 217, 239); font-style: italic;&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;) {&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;    ctx &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; s.&lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46);&quot;&gt;getRequestContext&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;()&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; {&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(136, 132, 111);&quot;&gt;// 读取请求&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; err &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; req.&lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46);&quot;&gt;ReadHeader&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;ctx.Request.Header, zr); err &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(174, 129, 255);&quot;&gt;nil&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; {&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(136, 132, 111);&quot;&gt;// 处理请求&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;            s.Core.&lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46);&quot;&gt;ServeHTTP&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;(cc, ctx)&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(136, 132, 111);&quot;&gt;// 写响应&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; err &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(166, 226, 46);&quot;&gt;writeResponse&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;(ctx, zw); err &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(174, 129, 255);&quot;&gt;nil&lt;/span&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt; {&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color: rgb(249, 38, 114);&quot;&gt;return&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;&lt;font size=&quot;3&quot;&gt;            }&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;&lt;font size=&quot;3&quot;&gt;        }&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;&lt;font size=&quot;3&quot;&gt;    }&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(248, 248, 242);&quot;&gt;&lt;font size=&quot;3&quot;&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" link="&lt;div style=&quot;color: #f8f8f2;background-color: #272822;font-family: Menlo, Monaco, &#39;Courier New&#39;, monospace;font-weight: normal;font-size: 12px;line-height: 18px;white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #88846f;&quot;&gt;// 在 server.go 中的请求处理&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;func&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; (&lt;/span&gt;&lt;span style=&quot;color: #fd971f;font-style: italic;&quot;&gt;s &lt;/span&gt;&lt;span style=&quot;color: #a6e22e;text-decoration: underline;&quot;&gt;Server&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;) &lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;Serve&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: #fd971f;font-style: italic;&quot;&gt;c&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #a6e22e;text-decoration: underline;&quot;&gt;context&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;text-decoration: underline;&quot;&gt;Context&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color: #fd971f;font-style: italic;&quot;&gt;conn&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #a6e22e;text-decoration: underline;&quot;&gt;network&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;text-decoration: underline;&quot;&gt;Conn&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;) (&lt;/span&gt;&lt;span style=&quot;color: #fd971f;font-style: italic;&quot;&gt;err&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #66d9ef;font-style: italic;&quot;&gt;error&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;) {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;    ctx &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; s.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;getRequestContext&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;()&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: #88846f;&quot;&gt;// 读取请求&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; err &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; req.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;ReadHeader&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;ctx.Request.Header, zr); err &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;==&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #ae81ff;&quot;&gt;nil&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: #88846f;&quot;&gt;// 处理请求&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;            s.Core.&lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;ServeHTTP&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(cc, ctx)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: #88846f;&quot;&gt;// 写响应&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; err &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #a6e22e;&quot;&gt;writeResponse&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;(ctx, zw); err &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;!=&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #ae81ff;&quot;&gt;nil&lt;/span&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt; {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color: #f92672;&quot;&gt;return&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;            }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;        }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;    }&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #f8f8f2;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" id="bZFTZhcOLTCebWkoZDsH-50">
          <mxCell style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
            <mxGeometry x="-465" y="2760" width="710" height="300" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-51" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.002;exitY=0.886;exitDx=0;exitDy=0;exitPerimeter=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="bZFTZhcOLTCebWkoZDsH-48" target="bZFTZhcOLTCebWkoZDsH-50" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="320" y="2680" as="sourcePoint" />
            <mxPoint x="-10" y="2630" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bZFTZhcOLTCebWkoZDsH-52" value="&lt;section id=&quot;markdown-section--22&quot; class=&quot;markdown-section&quot; data-markdown-raw=&quot;Reactor 模式的优势：&quot; data-section-index=&quot;22&quot; style=&quot;border-radius: 4px; margin: 6px 0px; position: relative; scroll-margin-bottom: 40px; scroll-margin-top: 40px; color: rgb(248, 248, 242); font-family: -apple-system, &amp;quot;system-ui&amp;quot;, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(30, 31, 28); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b style=&quot;&quot;&gt;Reactor 模式的优势：&lt;/b&gt;&lt;/font&gt;&lt;/section&gt;&lt;section id=&quot;markdown-section--23&quot; class=&quot;markdown-section&quot; data-markdown-raw=&quot;1. **高效的资源利用**：&lt;br/&gt;   - 不需要为每个连接创建线程&lt;br/&gt;   - 减少了线程上下文切换的开销&lt;br/&gt;   - 更好的内存使用效率&quot; data-section-index=&quot;23&quot; style=&quot;border-radius: 4px; margin: 6px 0px; position: relative; scroll-margin-bottom: 40px; scroll-margin-top: 40px; color: rgb(248, 248, 242); font-family: -apple-system, &amp;quot;system-ui&amp;quot;, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(30, 31, 28); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;ol style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;0&quot; value=&quot;1&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 0px; padding-top: 2px; padding-bottom: 2px; list-style-type: decimal;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span class=&quot;markdown-bold-text&quot; style=&quot;&quot;&gt;&lt;span&gt;高效的资&lt;/span&gt;&lt;span&gt;源利用&lt;/span&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;nested&quot; style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;3&quot; class=&quot;nested&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 24px; padding-top: 2px; padding-bottom: 2px; list-style-type: disc;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span&gt;不&lt;/span&gt;&lt;span&gt;需要为每个连接创建线&lt;/span&gt;&lt;span&gt;程&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;nested&quot; style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;3&quot; class=&quot;nested&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 24px; padding-top: 2px; padding-bottom: 2px; list-style-type: disc;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span&gt;减少了线&lt;/span&gt;&lt;span&gt;程上下文切换的&lt;/span&gt;&lt;span&gt;开销&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;nested&quot; style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;3&quot; class=&quot;nested&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 24px; padding-top: 2px; padding-bottom: 2px; list-style-type: disc;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span&gt;更好&lt;/span&gt;&lt;span&gt;的内存使用效率&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section id=&quot;markdown-section--24&quot; class=&quot;markdown-section&quot; data-markdown-raw=&quot;2. **更好的可伸缩性**：&lt;br/&gt;   - 能够处理大量并发连接&lt;br/&gt;   - 系统资源消耗相对较低&quot; data-section-index=&quot;24&quot; style=&quot;border-radius: 4px; margin: 6px 0px; position: relative; scroll-margin-bottom: 40px; scroll-margin-top: 40px; color: rgb(248, 248, 242); font-family: -apple-system, &amp;quot;system-ui&amp;quot;, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(30, 31, 28); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;ol style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;0&quot; value=&quot;2&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 0px; padding-top: 2px; padding-bottom: 2px; list-style-type: decimal;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span class=&quot;markdown-bold-text&quot; style=&quot;&quot;&gt;&lt;span&gt;更好的可伸缩性&lt;/span&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;nested&quot; style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;3&quot; class=&quot;nested&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 24px; padding-top: 2px; padding-bottom: 2px; list-style-type: disc;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span&gt;能够处&lt;/span&gt;&lt;span&gt;理大量并发连接&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;nested&quot; style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;3&quot; class=&quot;nested&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 24px; padding-top: 2px; padding-bottom: 2px; list-style-type: disc;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span&gt;系统资源消耗相&lt;/span&gt;&lt;span&gt;对较低&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section id=&quot;markdown-section--25&quot; class=&quot;markdown-section&quot; data-markdown-raw=&quot;3. **简化了并发处理**：&lt;br/&gt;   - 避免了多线程编程的复杂性&lt;br/&gt;   - 减少了锁的使用&lt;br/&gt;   - 降低了死锁风险&quot; data-section-index=&quot;25&quot; style=&quot;border-radius: 4px; margin: 6px 0px; position: relative; scroll-margin-bottom: 40px; scroll-margin-top: 40px; color: rgb(248, 248, 242); font-family: -apple-system, &amp;quot;system-ui&amp;quot;, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(30, 31, 28); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;ol style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;0&quot; value=&quot;3&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 0px; padding-top: 2px; padding-bottom: 2px; list-style-type: decimal;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span class=&quot;markdown-bold-text&quot; style=&quot;&quot;&gt;&lt;span&gt;简化了&lt;/span&gt;&lt;span&gt;并发处理&lt;/span&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ul class=&quot;nested&quot; style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;3&quot; class=&quot;nested&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 24px; padding-top: 2px; padding-bottom: 2px; list-style-type: disc;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span&gt;避免了多线程编&lt;/span&gt;&lt;span&gt;程的复杂性&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;nested&quot; style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;3&quot; class=&quot;nested&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 24px; padding-top: 2px; padding-bottom: 2px; list-style-type: disc;&quot;&gt;&lt;span&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;减少了锁的使用&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;nested&quot; style=&quot;margin: 0px 0px 0px 16px; padding: 0px;&quot;&gt;&lt;li data-indent=&quot;3&quot; class=&quot;nested&quot; style=&quot;margin-bottom: 2px !important; margin-top: 2px !important; margin-left: 24px; padding-top: 2px; padding-bottom: 2px; list-style-type: disc;&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;&lt;span&gt;降&lt;/span&gt;&lt;span&gt;低了死锁风险&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;&lt;section id=&quot;markdown-section--27&quot; class=&quot;markdown-section&quot; data-markdown-raw=&quot;这就是为什么 Hertz 选择使用 Reactor 模式而不是传统的 &amp;quot;每个请求一个协程&amp;quot; 模式的原因。它能够在高并发场景下提供更好的性能和资源利用率。&quot; data-section-index=&quot;27&quot; style=&quot;border-radius: 4px; margin: 6px 0px; position: relative; scroll-margin-bottom: 40px; scroll-margin-top: 40px; color: rgb(248, 248, 242); font-family: -apple-system, &amp;quot;system-ui&amp;quot;, sans-serif; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(30, 31, 28); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;font style=&quot;&quot; size=&quot;3&quot;&gt;&lt;b&gt;这就是为什么 Hertz 选择使用 Reactor 模式而不是传统的 &quot;每个请求一个协程&quot; 模式的原因。它能够在高并发场景下提供更好的性能和资源利用率。&lt;/b&gt;&lt;/font&gt;&lt;/section&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-510" y="2310" width="800" height="390" as="geometry" />
        </mxCell>
        <mxCell id="Z5fvSMFk5XlNrK9_g2ds-1" value="Hertz 和 Gin 框架的不同：&lt;div&gt;1.路由设计：&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-450" y="-2260" width="550" height="220" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
